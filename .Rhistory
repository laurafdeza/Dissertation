# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Proportion of fixations on target",
caption = "Mean +/- 95% CI") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(legend.position = 'none',
axis.title.x=element_blank(),
axis.text.x=element_blank())
grid.newpage()
grid.draw(rbind(ggplotGrob(tc), ggplotGrob(gca), size = "last"))
library(grid)
grid.draw(rbind(ggplotGrob(tc), ggplotGrob(gca), size = "last"))
gca <- fits_all_l2_overlay %>%
# mutate(`Spanish proficiency` = as.factor(DELE_z),
#        `Spanish use` = as.factor(use_z)) %>%
ggplot(., aes(x = time_zero, y = target_prop, #ymax = ymax, ymin = ymin,
lty = l1)) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
# geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
stat_summary(fun.y = "mean", geom = "line", size = .5) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.2) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Exponential value of fixation probability",
lty = "L1") +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom')
tc <- stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Proportion of fixations on target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(legend.position = 'none',
axis.title.x=element_blank(),
axis.text.x=element_blank())
grid.newpage()
grid.draw(rbind(ggplotGrob(tc), ggplotGrob(gca), size = "last"))
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_line(data = fits_all_l2_overlay, aes(stat_summary(fun.y = "mean", geom = "line", size = .5)))
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "lm", se = FALSE)
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "glm", se = FALSE)
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "gam", se = FALSE)
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "loess", se = FALSE)
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE)
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "loess", se = FALSE)
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "loess", se = FALSE) +
# geom_line(data = fits_all_l2_overlay,
#           aes(stat_summary(fun.y = "mean", geom = "line", size = .5)))
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Proportion of fixations on target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(legend.position = 'none',
axis.title.x=element_blank(),
axis.text.x=element_blank())
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "loess", se = FALSE) +
# geom_line(data = fits_all_l2_overlay,
#           aes(stat_summary(fun.y = "mean", geom = "line", size = .5)))
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Proportion of fixations on target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "loess") +
# geom_line(data = fits_all_l2_overlay,
#           aes(stat_summary(fun.y = "mean", geom = "line", size = .5)))
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Proportion of fixations on target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "loess", se = FALSE) +
# geom_line(data = fits_all_l2_overlay,
#           aes(stat_summary(fun.y = "mean", geom = "line", size = .5)))
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Proportion of fixations on target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "loess", se = FALSE) +
# geom_line(data = fits_all_l2_overlay,
#           aes(stat_summary(fun.y = "mean", geom = "line", size = .5)))
scale_lty_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Proportion of fixations on target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, color = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "loess", se = FALSE) +
# geom_line(data = fits_all_l2_overlay,
#           aes(stat_summary(fun.y = "mean", geom = "line", size = .5)))
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Proportion of fixations on target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, color = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "loess", se = FALSE, size = 2) +
# geom_line(data = fits_all_l2_overlay,
#           aes(stat_summary(fun.y = "mean", geom = "line", size = .5)))
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Proportion of fixations on target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_prop, color = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "loess", se = FALSE, pch = 20) +
# geom_line(data = fits_all_l2_overlay,
#           aes(stat_summary(fun.y = "mean", geom = "line", size = .5)))
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Proportion of fixations on target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
View(stress50)
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_count, color = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line")
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_count, color = l1)) +
geom_vline(xintercept = 4, lty = 3) +
#geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "loess", se = FALSE)
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_count, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Proportion of fixations on target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(legend.position = 'none',
axis.title.x=element_blank(),
axis.text.x=element_blank())
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_count, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
# geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Count of fixations on target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(legend.position = 'none',
axis.title.x=element_blank(),
axis.text.x=element_blank())
tc <- stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_count, lty = l1)) +
geom_vline(xintercept = 4, lty = 3) +
# geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Count of fixations on target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(legend.position = 'none',
axis.title.x=element_blank(),
axis.text.x=element_blank())
grid.newpage()
grid.draw(rbind(ggplotGrob(tc), ggplotGrob(gca), size = "last"))
tc <- stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_count, lty = l1)) +
geom_vline(xintercept = 4, lty = 3, color = 'grey40') +
# geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Count of fixations on target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(legend.position = 'none',
axis.title.x=element_blank(),
axis.text.x=element_blank())
grid.draw(rbind(ggplotGrob(tc), ggplotGrob(gca), size = "last"))
gca <- fits_all_l2_overlay %>%
# mutate(`Spanish proficiency` = as.factor(DELE_z),
#        `Spanish use` = as.factor(use_z)) %>%
ggplot(., aes(x = time_zero, y = target_prop, #ymax = ymax, ymin = ymin,
lty = l1)) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
# geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
stat_summary(fun.y = "mean", geom = "line", size = .5) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.2) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Exponential value of\nfixation probability",
lty = "L1") +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom')
tc <- stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_count, lty = l1)) +
geom_vline(xintercept = 4, lty = 3, color = 'grey40') +
# geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Count of fixations\non target") +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(legend.position = 'none',
axis.title.x=element_blank(),
axis.text.x=element_blank())
grid.draw(rbind(ggplotGrob(tc), ggplotGrob(gca), size = "last"))
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_count, lty = l1)) +
geom_vline(xintercept = 4, lty = 3, color = 'grey40') +
# geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Count of fixations\non target", xiintercept = 1) +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(legend.position = 'none',
axis.title.x=element_blank(),
axis.text.x=element_blank())
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_count, lty = l1)) +
geom_vline(xintercept = 4, lty = 3, color = 'grey40') +
# geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Count of fixations\non target", xiintercept = 1.5) +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(legend.position = 'none',
axis.title.x=element_blank(),
axis.text.x=element_blank())
tc <- stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_count, lty = l1)) +
geom_vline(xintercept = 4, lty = 3, color = 'grey40') +
# geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
scale_color_discrete(name="L1",
breaks = c('en', 'ma'),
labels = c("English", 'Chinese')) +
scale_x_continuous(breaks = c(-8, -6, -4, -2, 0, 2, 4, 6, 8),
labels = c("-400", "-300", "-200", "-100", "0", "100", "200", "300", "400")) +
# ggtitle("Time course per verbal tense") +
# xlab("Time in 50 ms bins (0 = marker time before accounting for 200 ms processing)") +
labs(y = "Count of fixations\non target", xiintercept = 1.5) +
# annotate("text", x = 3.65, y = 0.53, label = '200ms',
#                       angle = 90, size = 3, hjust = 0) +
theme_grey(base_size = 10, base_family = "Times") +
theme(legend.position = 'none',
axis.title.x=element_blank(),
axis.text.x=element_blank())
grid.draw(rbind(ggplotGrob(tc), ggplotGrob(gca), size = "last"))
gca <- fits_all_l2_overlay %>%
# mutate(`Spanish proficiency` = as.factor(DELE_z),
#        `Spanish use` = as.factor(use_z)) %>%
ggplot(., aes(x = time_zero, y = target_prop, #ymax = ymax, ymin = ymin,
lty = l1)) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
# geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
stat_summary(fun.y = "mean", geom = "line", size = .5) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.2) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
labs(x = "Time (ms) relative to verb's final syllable onset",
y = "Exponential value of\nfixation probability",
lty = "L1") +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom')
grid.draw(rbind(ggplotGrob(tc), ggplotGrob(gca), size = "last"))
stress50 %>%
filter(time_zero > -5 & time_zero < 5, l1 != 'es') %>%
ggplot(., aes(x = time_zero, y = target_count, color = l1)) +
geom_vline(xintercept = 4, lty = 3) +
#geom_hline(yintercept = 0.5, lty = 3) +
stat_summary(fun.y = mean, geom = "line") +
geom_smooth(method = "poly", se = FALSE)
View(fits_all_l2_overlay)
plogis(0.12)
plogis(-1)
plogis(1)
plogis(2)
grid.draw(rbind(ggplotGrob(tc), ggplotGrob(gca), size = "last"))
plogis(0)
