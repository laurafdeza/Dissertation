`L2 use` = blank_same_as_last(as.character(`L2 use`))
) %>%
select(`L1 experience`, `L2 proficiency`, `L2 use`,
Probability = prob,
`Lower bound` = prob_lb, `Upper bound` = prob_ub) %>%
flextable() %>%
width(., j = c(1:3, 5:6), width = c(1.2, 1.1, .6, 1.2, 1.2)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
colformat_num(j = c(4:6), digits = 2) %>%
align(., j = c(2:3), align = "right", part = "body") %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
knitr::include_graphics(
here("figs", "stress", "gca", 'LL_changes', "exp_plot_simple.png"))
ranef_table <- gca_mon_simple$gca_mon_base %>%
tidy_ranef_summary %>%
# Format the numbers
mutate_each(funs(format_fixef_num), vcov, sdcor) %>%
mutate_each(funs(format_cor), -var1, -grp, -vcov, -sdcor) %>%
sort_ranef_grps %>%
# Format variable names and group names
mutate(var1 = fix_param_names(var1) %>% blank_nas,
grp =  blank_same_as_last(grp) %>% fix_param_names) %>%
rename(Group = grp, Parameter = var1, Variance = vcov, SD = sdcor)
# Correlation columns need names with characters so that pandoc can align them
names(ranef_table)[5:8] <-
c("Correlations", "&nbsp;", " &nbsp;", "  &nbsp;")
# Correlation columns need names with characters so that pandoc can align them
names(ranef_table)[5:7] <-
c("Correlations", "&nbsp;", " &nbsp;", "  &nbsp;")
# Correlation columns need names with characters so that pandoc can align them
names(ranef_table)[5:5] <-
c("Correlations", "&nbsp;", " &nbsp;", "  &nbsp;")
# Correlation columns need names with characters so that pandoc can align them
names(ranef_table)[5] <-
c("Correlations")
ranef_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("llrrrrrr"))
ranef_table <- gca_l2_dele_simple$gca_l2_dele_final %>%
tidy_ranef_summary %>%
# Format the numbers
mutate_each(funs(format_fixef_num), vcov, sdcor) %>%
mutate_each(funs(format_cor), -var1, -grp, -vcov, -sdcor) %>%
sort_ranef_grps %>%
# Format variable names and group names
mutate(var1 = fix_param_names(var1) %>% blank_nas,
grp =  blank_same_as_last(grp) %>% fix_param_names) %>%
rename(Group = grp, Parameter = var1, Variance = vcov, SD = sdcor)
# Correlation columns need names with characters so that pandoc can align them
names(ranef_table)[5:10] <-
c("Correlations", "&nbsp;", " &nbsp;", "  &nbsp;", "  &nbsp;", "&nbsp;")
# Correlation columns need names with characters so that pandoc can align them
names(ranef_table)[5] <-
c("Correlations")
ranef_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("llrrrrrr"))
ranef_table <- gca_l2_use_simple$gca_l2_use_final %>%
tidy_ranef_summary %>%
# Format the numbers
mutate_each(funs(format_fixef_num), vcov, sdcor) %>%
mutate_each(funs(format_cor), -var1, -grp, -vcov, -sdcor) %>%
sort_ranef_grps %>%
# Format variable names and group names
mutate(var1 = fix_param_names(var1) %>% blank_nas,
grp =  blank_same_as_last(grp) %>% fix_param_names) %>%
rename(Group = grp, Parameter = var1, Variance = vcov, SD = sdcor)
ranef_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("llrrrrrr"))
# Correlation columns need names with characters so that pandoc can align them
names(ranef_table)[5] <-
c("Correlations")
ranef_table <- gca_l2_exp_simple$gca_l2_exp_final %>%
tidy_ranef_summary %>%
# Format the numbers
mutate_each(funs(format_fixef_num), vcov, sdcor) %>%
mutate_each(funs(format_cor), -var1, -grp, -vcov, -sdcor) %>%
sort_ranef_grps %>%
# Format variable names and group names
mutate(var1 = fix_param_names(var1) %>% blank_nas,
grp =  blank_same_as_last(grp) %>% fix_param_names) %>%
rename(Group = grp, Parameter = var1, Variance = vcov, SD = sdcor)
# Correlation columns need names with characters so that pandoc can align them
names(ranef_table)[5] <-
c("Correlations")
ranef_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("llrrrrrr"))
library("papaja")
library("officer")
library("flextable")
library("flextable")
library("readr")
library("flextable")
library("readr")
library("here")
library("magrittr")
source(here::here("scripts", "01_helpers.R"))
source(here::here("scripts", "01_helpers.R"))
# Get path to saved models
gca_mods_path  <- here::here("mods", "stress", "gca", "LL_changes")
# Load models as list and store full mod to global env
load(paste0(gca_mods_path, "/gca_mon_simple.Rdata"))
install.packages("lsr")
library(lsr)
etaSquared(gca_mon_simple$gca_mon_final)
summary(gca_mon_simple$gca_mon_final)
load(paste0(gca_mods_path, "/gca_l2_dele_simple.Rdata"))
knitr::include_graphics(
here("figs", "stress", "gca", "LL_changes", "timecourse.png")
)
params <- gca_mon_simple$gca_mon_final %>%
tidy_lme4() %>%
rename(B = Estimate)
params$subscript <-
c(paste0(0:2, 0))
params <- tibble::column_to_rownames(params, 'subscript')
params$subscript <-
c(paste0(0:2, 0))
# Shortcut for inline reporting from the above table
report_row <- function(row_name) report_fixef_row(params, row_name)
report_row('1')
report_row(0)
report_row('0')
b0
# Pre-calculate intercept as proportion
b0 <- params$B[params$subscript == "00"] %>% as.numeric
b0_prop <- b0 %>% inv_logit %>% round(2) %>% remove_leading_zero
b0_prop
b0
border_1 <- fp_border(width = 1.5)
border_2 <- fp_border(width = 0.75)
model_preds_simple$target_onset_preds_mon %>%
# mutate(stress = if_else(stress == 1, "Preterit", "Present")) %>%
# arrange(stress) %>%
# group_by(stress) %>%
distinct() %>%
#ungroup() %>%
# mutate(
#        stress = blank_same_as_last(as.character(stress))) %>%
select(Probability = prob,
`Lower bound` = prob_lb, `Upper bound` = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3), width = c(1.3, 1.3)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
load(paste0(gca_mods_path, "/model_preds_simple.Rdata"))
model_preds_simple$target_onset_preds_mon %>%
distinct() %>%
select(Probability = prob,
`Lower bound` = prob_lb, `Upper bound` = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3), width = c(1.3, 1.3)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
params <- gca_l2_dele_simple$gca_l2_dele_final %>%
tidy_lme4() %>%
rename(B = Estimate)
params$subscript <-
c(paste0(0:2, 0), paste0(0, 1:2),
paste0(1, 1:2), paste0(0, 3))
params <- tibble::column_to_rownames(params, 'subscript')
params$subscript <-
c(paste0(0:2, 0), paste0(0, 1:2),
paste0(1, 1:2), paste0(0, 3))
# Shortcut for inline reporting from the above table
report_row <- function(row_name) report_fixef_row(params, row_name)
# Pre-calculate intercept as proportion
b0 <- params$B[params$subscript == "00"] %>% as.numeric
b0_prop <- b0 %>% inv_logit %>% round(2) %>% remove_leading_zero
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_l2_dele_simple$gca_l2_dele_final %>%
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:2, 0), paste0(0, 1:2),
paste0(1, 1:2), paste0(0, 3))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects$Parameter %<>% paste(., var_labels)
pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
summary(gca_l2_dele_simple$gca_l2_dele_final)
summary(gca_l2_use_simple$gca_l2_use_final)
load(paste0(gca_mods_path, "/gca_l2_use_simple.Rdata"))
load(paste0(gca_mods_path, "/gca_l2_exp_simple.Rdata"))
summary(gca_l2_use_simple$gca_l2_use_final)
summary(gca_l2_exp_simple$gca_l2_exp_final)
params <- gca_l2_dele_simple$gca_l2_dele_final %>%
tidy_lme4() %>%
rename(B = Estimate)
params$subscript <-
c(paste0(0:2, 0), paste0(0, 1:2),
paste0(1, 1:2), paste0(0, 3))
params <- tibble::column_to_rownames(params, 'subscript')
params$subscript <-
c(paste0(0:2, 0), paste0(0, 1:2),
paste0(1, 1:2), paste0(0, 3))
# Shortcut for inline reporting from the above table
report_row <- function(row_name) report_fixef_row(params, row_name)
report_row(2)
report_row(1)
report_row(7)
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_l2_use_simple$gca_l2_use_final %>%
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:2, 0), paste0(0, 1:2),
paste0(1, 1:2), paste0(0, 3),
paste0(1, 3), paste0(0, 4))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects$Parameter %<>% paste(., var_labels)
pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_l2_exp_simple$gca_l2_exp_final %>%
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:2, 0), paste0(0, 1:2),
paste0(1, 1:2), paste0(0, 3:4),
paste0(1, 3:4))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects$Parameter %<>% paste(., var_labels)
pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
stress50 <- read_csv(here::here("data", "clean", "stress_50ms_final_onsetc3updated.csv"))
plogis(-0.5)
plogis(0.5)
plogis(1)
plogis(1.5)
# Load data
source(here::here("scripts", "00_load_libs.R"))
# source(here::here("scripts", "02_load_data.R"))
stress50 <- read_csv(here("data", "clean", "stress_50ms_final_onsetc3updated.csv"))
wm <- read_csv("./data/clean/wm_processing_speed.csv")
vision <- read_csv("./data/clean/vision_scores_nooutliers.csv") # pred car
corsi <- read_csv("./data/clean/corsi_z_scores.csv")
wm_score <- read_csv("./data/clean/ospan_set_z_scores.csv")
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = vision, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = corsi, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = wm_score, by = "participant", all.x=TRUE)
vision50 <- na.omit(vision50)
vision50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 3, prefix = "ot")
vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4)
vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1))
vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 3, prefix = "ot")
View(vision50)
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = vision, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = corsi, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = wm_score, by = "participant", all.x=TRUE)
vision50 <- na.omit(vision50)
vision50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 3, prefix = "ot")
vision50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
# source(here::here("scripts", "02_load_data.R"))
stress50 <- read_csv(here("data", "clean", "stress_50ms_final_onsetc3updated.csv"))
vision50 <- stress50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision_50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision50 <- left_join(x = vision50, y = vision, by = "participant", all.x=TRUE)
vision_50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision50 <- left_join(x = vision50, y = corsi, by = "participant", all.x=TRUE)
vision_50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision50 <- left_join(x = vision50, y = wm_score, by = "participant", all.x=TRUE)
vision_50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision50 <- na.omit(vision50)
vision_50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = vision, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = corsi, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = wm_score, by = "participant", all.x=TRUE)
vision_50 <- na.omit(vision50)
dim(vision50)
dim(vision_50)
unique(vision_50$time_zero)
vision50 %>%
filter(., l1 == 'es' & time_zero >= 0 & time_zero <= 8) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision_50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision_50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision_50 <- na.omit(vision50)
vision_50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision_50 <- na.omit(vision50)
vision_50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = vision, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = corsi, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = wm_score, by = "participant", all.x=TRUE)
vision50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
mon_vision <- filter(vision50, l1 == 'es') %>% select(-DELE, -percent_l2_week,
-prof, -group)
mod_ot1 <-
lmer(eLog ~ 1 + ot1 +
(1 + stress_sum + ot1 | participant),
control = lmerControl(optimizer = 'bobyqa'),
data = mon_vision, weights = 1/wts, REML = F)
mod_ot2 <-
update(mod_ot1, . ~ . -(1 + stress_sum + ot1 | participant) +
ot2 + (1 + stress_sum + ot1 + ot2 | participant))
mod_ot3 <-
update(mod_ot2, . ~ . -(1 + stress_sum + ot1 + ot2 | participant) +
ot3 + (1 + stress_sum + ot1 + ot2 + ot3 | participant))
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = vision, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = corsi, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = wm_score, by = "participant", all.x=TRUE)
vision50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 3, prefix = "ot")
mon_vision <- filter(vision50, l1 == 'es') %>% select(-DELE, -percent_l2_week,
-prof, -group)
mod_ot1 <-
lmer(eLog ~ 1 + ot1 +
(1 + stress_sum + ot1 | participant),
control = lmerControl(optimizer = 'bobyqa'),
data = mon_vision, weights = 1/wts, REML = F)
mod_ot2 <-
update(mod_ot1, . ~ . -(1 + stress_sum + ot1 | participant) +
ot2 + (1 + stress_sum + ot1 + ot2 | participant))
mod_ot3 <-
update(mod_ot2, . ~ . -(1 + stress_sum + ot1 + ot2 | participant) +
ot3 + (1 + stress_sum + ot1 + ot2 + ot3 | participant))
anova(mod_ot1, mod_ot2, mod_ot3)
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = vision, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = corsi, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = wm_score, by = "participant", all.x=TRUE)
vision50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
mon_vision <- filter(vision50, l1 == 'es') %>% select(-DELE, -percent_l2_week,
-prof, -group)
mod_ot1 <-
lmer(eLog ~ 1 + ot1 +
(1 + stress_sum + ot1 | participant),
control = lmerControl(optimizer = 'bobyqa'),
data = mon_vision, weights = 1/wts, REML = F)
mod_ot2 <-
update(mod_ot1, . ~ . -(1 + stress_sum + ot1 | participant) +
ot2 + (1 + stress_sum + ot1 + ot2 | participant))
anova(mod_ot1, mod_ot2)
anova(mod_ot1, mod_ot2)
mod_ot4 <- update(mod_ot2, . ~ . + (1 | target))
mod_ot5 <- update(mod_ot4, . ~ . -(1 | target) + (1 + ot1 | target))
mod_ot6 <- update(mod_ot5, . ~ . -(1 + ot1 | target) +
+ (1 + ot1 + ot2 | target))
anova(mod_ot2, mod_ot4, mod_ot5, mod_ot6)
# Base model
gca_mon_base <- mod_ot5
# add stress effect to intercept, linear slope, quadratic, and cubic time terms
gca_mon_stress_0 <- update(gca_mon_base,    . ~ . + stress_sum)
gca_mon_stress_1 <- update(gca_mon_stress_0, . ~ . + ot1:stress_sum)
gca_mon_stress_2 <- update(gca_mon_stress_1, . ~ . + ot2:stress_sum)
mon_stress_anova <-
anova(gca_mon_base, gca_mon_stress_0, gca_mon_stress_1,
gca_mon_stress_2)
mon_stress_anova
# add visuospatial proc speed effect to intercept, linear slope, quadratic, and cubic time terms
gca_mon_corsirt_0 <- update(gca_mon_base,    . ~ . + corsi_rt)
gca_mon_corsirt_1 <- update(gca_mon_corsirt_0, . ~ . + ot1:corsi_rt)
gca_mon_corsirt_2 <- update(gca_mon_corsirt_1, . ~ . + ot2:corsi_rt)
gca_mon_corsirt_3 <- update(gca_mon_corsirt_2, . ~ . + ot3:corsi_rt)
mon_corsirt_anova <-
anova(gca_mon_base, gca_mon_corsirt_0, gca_mon_corsirt_1,
gca_mon_corsirt_2)
# BRANCH #1
# add verbal proc time effect to intercept, linear slope, quadratic, and cubic time terms
gca_mon_ospan_0 <- update(gca_mon_base,    . ~ . + ospan_rt)
gca_mon_ospan_1 <- update(gca_mon_ospan_0, . ~ . + ot1:ospan_rt)
gca_mon_ospan_2 <- update(gca_mon_ospan_1, . ~ . + ot2:ospan_rt)
mon_ospan_anova <-
anova(gca_mon_base, gca_mon_ospan_0, gca_mon_ospan_1,
gca_mon_ospan_2)
vision50 <- left_join(x = stress50, y = wm_score, by = "participant", all.x=TRUE)
vision_50 <- na.omit(vision50)
vision_50 <- vision_50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = vision, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = corsi, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = wm_score, by = "participant", all.x=TRUE)
vision_50 <- na.omit(vision50)
vision_50 <- vision_50 %>%
filter(., l1 == 'es' & time_zero >= -5 & time_zero <= 5) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision_50 <- vision_50 %>%
filter(., l1 == 'es' & time_zero >= -10 & time_zero <= 10) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision_50 <- vision_50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = vision, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = corsi, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = wm_score, by = "participant", all.x=TRUE)
vision_50 <- na.omit(vision50)
vision_50 <- vision_50 %>%
filter(., l1 == 'es' & time_zero >= 0 & time_zero <= 8) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 2, prefix = "ot")
