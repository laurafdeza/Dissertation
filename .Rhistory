geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35)
model_preds$fits_ss_pitch %>%
#mutate(ospan_std = as.factor(ospan_std)) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin, color = pitch_dev)) +
facet_grid(. ~ ospan_std) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
# geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
# geom_line(size = 0.35) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.2)
model_preds$fits_ss_pitch %>%
#mutate(ospan_std = as.factor(ospan_std)) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin, color = pitch_dev)) +
facet_grid(. ~ ospan_std) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35)
install.packages('itsadug',repos='http://cran.us.r-project.org')
install.packages("itsadug")
source(here::here("scripts", "00_load_libs.R"))
allinfo <- read.csv(here::here("data", "pupurri_analysis.csv"))
allinfo$participant <- tolower(allinfo$participant)
allinfo$DELE <- as.numeric(as.character(allinfo$DELE))
allinfo$age_fluent_L2 <- as.numeric(as.character(allinfo$age_fluent_L2))
allinfo$percent_l1_week <- as.numeric(as.character(allinfo$percent_l1_week))
allinfo$percent_l2_week <- as.numeric(as.character(allinfo$percent_l2_week))
agg <- separate(data = allinfo,
col = group,
into = c("prof", "l1"),
sep = 1,
remove = FALSE) %>%
# see 00_homogeneity. Participants removed to make L2 groups homog in L2 use and prof
filter(., participant != 'ies04' & participant != 'ies17' &
participant != 'aes32' & participant != 'ies28')
agg$l1 <- str_replace(agg$l1, "es", "en")
agg$l1 <- str_replace(agg$l1, "ms", "ma")
agg$l1 <- str_replace(agg$l1, "on", "es")
# No. participants
agg %>%
group_by(., l1) %>%
tally()
# Females per group
agg %>%
group_by(., l1, gender) %>%
tally()
# Get mean AGE as a function of group + SD
agg %>%
group_by(l1) %>%
summarize(min_age = min(age),
max_age = max(age),
mean_age = mean(age),
sd_age = sd(age))
# When participants started learning the L2
agg %>%
filter(., group %in% c("ies", "aes", "ims", "ams")) %>%
group_by(., l1) %>%
summarise(., mean_AoA = mean(AoA_L2),
sd_AoA = sd(AoA_L2),
mean_fluentL2 = mean(AoA_L2),
sd_fluentL2 = sd(AoA_L2))
# When participants started learning the L2
agg %>%
filter(., group %in% c("ies", "aes", "ims", "ams")) %>%
group_by(., l1) %>%
summarise(., mean_AoA = mean(AoA_L2),
sd_AoA = sd(AoA_L2),
mean_fluentL2 = mean(AoA_L2),
sd_fluentL2 = sd(AoA_L2))
agg %>%
group_by(., l1, AoA_L2) %>%
tally()
agg %>%
filter(., l1 == 'en') %>%
group_by(., l1, AoA_L2) %>%
tally()
agg %>%
filter(., l1 == 'en', AoA_L2 < 14) %>%
# group_by(., l1, AoA_L2) %>%
tally()
# n = 25
agg %>%
filter(., l1 == 'en', AoA_L2 => 14 & AoA_L2 < 18) %>%
# group_by(., l1, AoA_L2) %>%
tally()
# n = 25
agg %>%
filter(., l1 == 'en', AoA_L2 => 14, AoA_L2 < 18) %>%
# group_by(., l1, AoA_L2) %>%
tally()
# n = 25
agg %>%
filter(., l1 == 'en' & AoA_L2 => 14 & AoA_L2 < 18) %>%
# group_by(., l1, AoA_L2) %>%
tally()
agg %>%
filter(., l1 == 'en' & AoA_L2 => 14 & AoA_L2 < 18)
agg %>%
filter(., l1 == 'en' & AoA_L2 >= 14 & AoA_L2 < 18) %>%
# group_by(., l1, AoA_L2) %>%
tally()
agg %>%
filter(., l1 == 'en' & AoA_L2 >= 18) %>%
# group_by(., l1, AoA_L2) %>%
tally()
agg %>%
filter(., l1 == 'ma', AoA_L2 < 14) %>%
# group_by(., l1, AoA_L2) %>%
tally()
agg %>%
filter(., l1 == 'ma' & AoA_L2 >= 14 & AoA_L2 < 18) %>%
# group_by(., l1, AoA_L2) %>%
tally()
agg %>%
filter(., l1 == 'ma' & AoA_L2 >= 18) %>%
# group_by(., l1, AoA_L2) %>%
tally()
source(here::here("scripts", "00_load_libs.R"))
install.packages("here")
source(here::here("scripts", "00_load_libs.R"))
install.packages("magrittr")
source(here::here("scripts", "00_load_libs.R"))
source(here::here("scripts", "01_helpers.R"))
library(grid)
library(gridExtra)
# Get path to saved models
gca_mods_path  <- here("mods", "stress", "gca", "LL_changes")
load(paste0(gca_mods_path, "/gca_l2_dele_simple.Rdata"))
install.packages("devtools")
# install gazer from GitHub
remotes::install_github("dmirman/gazer")
source(here::here("scripts", "00_load_libs.R"))
source(here::here("scripts", "01_helpers.R"))
install.packages("gtools")
source(here::here("scripts", "01_helpers.R"))
# Get path to saved models
gca_mods_path  <- here("mods", "stress", "gca", "LL_changes")
load(paste0(gca_mods_path, "/gca_l2_dele_simple.Rdata"))
# Set path for saving figs
figs_path <- here("figs", "stress", "gca", "LL_changes")
model_preds_simple$fits_all_dele %>%
mutate(`Spanish proficiency` = as.factor(DELE_z),
#`Spanish use` = as.factor(use_z),
Stress = if_else(condition_sum == 1, "Oxytone", 'Paroxytone'),
Stress = fct_relevel(Stress, 'Paroxytone'),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish proficiency`, fill = Stress, color = Stress)) +
facet_grid(. ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
# scale_color_brewer(palette = "Set1", name = "Condition") +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 10, base_family = "Times") + legend_adj_2 +
theme(legend.position = 'bottom', #c(0.1, 0.9)
plot.margin = margin(5.5, 20, 5.5, 5.5, "points")) #cm
load(paste0(gca_mods_path, "/model_preds_simple.Rdata"))
model_preds_simple$fits_all_dele %>%
mutate(`Spanish proficiency` = as.factor(DELE_z),
#`Spanish use` = as.factor(use_z),
Stress = if_else(condition_sum == 1, "Oxytone", 'Paroxytone'),
Stress = fct_relevel(Stress, 'Paroxytone'),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish proficiency`, fill = Stress, color = Stress)) +
facet_grid(. ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
# scale_color_brewer(palette = "Set1", name = "Condition") +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 10, base_family = "Times") + legend_adj_2 +
theme(legend.position = 'bottom', #c(0.1, 0.9)
plot.margin = margin(5.5, 20, 5.5, 5.5, "points")) #cm
model_preds_simple$fits_all_dele %>%
mutate(`Spanish proficiency` = as.factor(DELE_z),
#`Spanish use` = as.factor(use_z),
Stress = if_else(condition_sum == 1, "Oxytone", 'Paroxytone'),
Stress = fct_relevel(Stress, 'Paroxytone'),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English"))
model_preds_simple$fits_all_dele %>%
mutate(`Spanish proficiency` = as.factor(DELE_z),
#`Spanish use` = as.factor(use_z),
Stress = if_else(condition_sum == 1, "Oxytone", 'Paroxytone'),
Stress = fct_relevel(Stress, 'Paroxytone'),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish proficiency`, fill = Stress, color = Stress))
model_preds_simple$fits_all_dele %>%
mutate(`Spanish proficiency` = as.factor(DELE_z),
#`Spanish use` = as.factor(use_z),
Stress = if_else(condition_sum == 1, "Oxytone", 'Paroxytone'),
Stress = fct_relevel(Stress, 'Paroxytone'),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish proficiency`, fill = Stress, color = Stress)) +
#facet_grid(. ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35)
model_preds_simple$fits_all_dele %>%
mutate(`Spanish proficiency` = as.factor(DELE_z),
#`Spanish use` = as.factor(use_z),
Stress = if_else(condition_sum == 1, "Oxytone", 'Paroxytone'),
Stress = fct_relevel(Stress, 'Paroxytone'),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish proficiency`, fill = Stress, color = Stress)) +
#facet_grid(. ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
# scale_color_brewer(palette = "Set1", name = "Condition") +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Empirical logit of looks to target")
model_preds_simple$fits_all_dele %>%
mutate(`Spanish proficiency` = as.factor(DELE_z),
#`Spanish use` = as.factor(use_z),
Stress = if_else(condition_sum == 1, "Oxytone", 'Paroxytone'),
Stress = fct_relevel(Stress, 'Paroxytone'),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish proficiency`, fill = Stress, color = Stress)) +
#facet_grid(. ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
# scale_color_brewer(palette = "Set1", name = "Condition") +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 10, base_family = "Times") + legend_adj_2 +
theme(legend.position = 'bottom', #c(0.1, 0.9)
plot.margin = margin(5.5, 20, 5.5, 5.5, "points"))
# All three variables
dele_plot <- model_preds_simple$fits_all_dele %>%
mutate(`Spanish proficiency` = as.factor(DELE_z),
#`Spanish use` = as.factor(use_z),
Stress = if_else(condition_sum == 1, "Oxytone", 'Paroxytone'),
Stress = fct_relevel(Stress, 'Paroxytone'),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish proficiency`, fill = Stress, color = Stress)) +
#facet_grid(. ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
# scale_color_brewer(palette = "Set1", name = "Condition") +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 10, base_family = "Times") + legend_adj_2 +
theme(legend.position = 'bottom', #c(0.1, 0.9)
plot.margin = margin(5.5, 20, 5.5, 5.5, "points")) #cm
ggsave(paste0(figs_path, "/dele_plot_simple.png"), dele_plot, width = 180,
height = 120, units = "mm", dpi = 600)
source(here::here("scripts", "00_load_libs.R"))
source(here::here("scripts", "01_helpers.R"))
library(grid)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
load(paste0(gca_mods_path, "/model_preds_simple.Rdata"))
# Get path to saved models
gca_mods_path  <- here("mods", "stress", "gca", "LL_changes")
load(paste0(gca_mods_path, "/model_preds_simple.Rdata"))
# Set path for saving figs
figs_path <- here("figs", "stress", "gca", "LL_changes")
base_plot <- model_preds_simple$fits_all_exp %>%
mutate(`Spanish use` = as.factor(use_z),
`Spanish proficiency` = as.factor(DELE_z),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish use`)) +
facet_grid(`Spanish proficiency` ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
# scale_color_brewer(palette = "Set1", name = "Condition") +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 10, base_family = "Times") + legend_adj_2 +
theme(legend.position = 'bottom', #c(0.1, 0.9)
plot.margin = margin(5.5, 20, 5.5, 5.5, "points"))
base_plot
exp_plot <- grid.arrange(base_plot,
bottom = textGrob('Spanish proficiency', rot = 270,
x = 0.98, y = 2.9, gp = gpar(fontsize = 9,
fontfamily = 'Times')))
ggsave(paste0(figs_path, "/exp_plot_simple_ylong.png"), exp_plot, width = 180,
height = 180, units = "mm", dpi = 600)
exp_plot <- grid.arrange(base_plot,
bottom = textGrob('Spanish proficiency', rot = 270,
x = 0.98, y = 4, gp = gpar(fontsize = 9,
fontfamily = 'Times')))
ggsave(paste0(figs_path, "/exp_plot_simple_ylong.png"), exp_plot, width = 180,
height = 180, units = "mm", dpi = 600)
base_plot <- model_preds_simple$fits_all_exp %>%
mutate(`Spanish use` = as.factor(use_z),
`Spanish proficiency` = as.factor(DELE_z),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish use`)) +
facet_grid(`Spanish proficiency` ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
# scale_color_brewer(palette = "Set1", name = "Condition") +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 12, base_family = "Times") + legend_adj_2 +
theme(legend.position = 'bottom', #c(0.1, 0.9)
plot.margin = margin(5.5, 20, 5.5, 5.5, "points"))
exp_plot <- grid.arrange(base_plot,
bottom = textGrob('Spanish proficiency', rot = 270,
x = 0.98, y = 4, gp = gpar(fontsize = 9,
fontfamily = 'Times')))
ggsave(paste0(figs_path, "/exp_plot_simple_ylong.png"), exp_plot, width = 180,
height = 180, units = "mm", dpi = 600)
base_plot <- model_preds_simple$fits_all_exp %>%
mutate(`Spanish use` = as.factor(use_z),
`Spanish proficiency` = as.factor(DELE_z),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish use`)) +
facet_grid(`Spanish proficiency` ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
# scale_color_brewer(palette = "Set1", name = "Condition") +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 14, base_family = "Times") + legend_adj_2 +
theme(legend.position = 'bottom', #c(0.1, 0.9)
plot.margin = margin(5.5, 20, 5.5, 5.5, "points"))
exp_plot <- grid.arrange(base_plot,
bottom = textGrob('Spanish proficiency', rot = 270,
x = 0.98, y = 4, gp = gpar(fontsize = 9,
fontfamily = 'Times')))
ggsave(paste0(figs_path, "/exp_plot_simple_ylong.png"), exp_plot, width = 180,
height = 180, units = "mm", dpi = 600)
base_plot <- model_preds_simple$fits_all_exp %>%
mutate(`Spanish use` = as.factor(use_z),
`Spanish proficiency` = as.factor(DELE_z),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish use`)) +
facet_grid(`Spanish proficiency` ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
# scale_color_brewer(palette = "Set1", name = "Condition") +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 12, base_family = "Times") + legend_adj_2 +
theme(legend.position = 'bottom', #c(0.1, 0.9)
legend.text = element_text(size = 10),
plot.margin = margin(5.5, 20, 5.5, 5.5, "points"))
base_plot
base_plot <- model_preds_simple$fits_all_exp %>%
mutate(`Spanish use` = as.factor(use_z),
`Spanish proficiency` = as.factor(DELE_z),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish use`)) +
facet_grid(`Spanish proficiency` ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
# scale_color_brewer(palette = "Set1", name = "Condition") +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 12, base_family = "Times") + legend_adj_2 +
theme(legend.position = 'bottom', #c(0.1, 0.9)
legend.text = element_text(size = 12),
plot.margin = margin(5.5, 20, 5.5, 5.5, "points"))
base_plot
base_plot <- model_preds_simple$fits_all_exp %>%
mutate(`Spanish use` = as.factor(use_z),
`Spanish proficiency` = as.factor(DELE_z),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish use`)) +
facet_grid(`Spanish proficiency` ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
# scale_color_brewer(palette = "Set1", name = "Condition") +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 12, base_family = "Times") + legend_adj_2 +
theme(legend.position = 'bottom', #c(0.1, 0.9)
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
plot.margin = margin(5.5, 20, 5.5, 5.5, "points"))
base_plot
base_plot <- model_preds_simple$fits_all_exp %>%
mutate(`Spanish use` = as.factor(use_z),
`Spanish proficiency` = as.factor(DELE_z),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Spanish use`)) +
facet_grid(`Spanish proficiency` ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, -2, 0, 2, 4),
labels = c("-200", "-100", "0", "100", "200")) +
# scale_color_brewer(palette = "Set1", name = "Condition") +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to final syllable onset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 12, base_family = "Times") + legend_adj_2 +
theme(legend.position = 'bottom', #c(0.1, 0.9)
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
plot.margin = margin(5.5, 20, 5.5, 5.5, "points"))
exp_plot <- grid.arrange(base_plot,
bottom = textGrob('Spanish proficiency', rot = 270,
x = 0.98, y = 4, gp = gpar(fontsize = 11,
fontfamily = 'Times')))
exp_plot
ggsave(paste0(figs_path, "/exp_plot_simple_ylong.png"), exp_plot, width = 180,
height = 180, units = "mm", dpi = 600)
exp_plot <- grid.arrange(base_plot,
bottom = textGrob('Spanish proficiency', rot = 270,
x = 0.98, y = 3.5, gp = gpar(fontsize = 11,
fontfamily = 'Times')))
ggsave(paste0(figs_path, "/exp_plot_simple_ylong.png"), exp_plot, width = 180,
height = 180, units = "mm", dpi = 600)
exp_plot <- grid.arrange(base_plot,
bottom = textGrob('Spanish proficiency', rot = 270,
x = 0.98, y = 3.4, gp = gpar(fontsize = 11,
fontfamily = 'Times')))
ggsave(paste0(figs_path, "/exp_plot_simple_ylong.png"), exp_plot, width = 180,
height = 180, units = "mm", dpi = 600)
source(here::here("scripts", "00_load_libs.R"))
# Get path to saved models
gca_mods_path  <- here("mods", "use_prof", "gca")
# Load models as lists
load(paste0(gca_mods_path, "/gca_mod_mon_simple.Rdata"))
load(paste0(gca_mods_path, "/gca_en_mods_simple.Rdata"))
# Store objects in global env
list2env(gca_mod_mon_simple, globalenv())
list2env(gca_en_mods_simple, globalenv())
summary(gca_mod_mon_final)
summary(gca_en_mod_final)
