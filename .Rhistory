mod_type <- "gca_mon"
mod_type <- "gca_mon"
mod_spec <- c("_base",
"_stress_0", "_stress_1", "_stress_2", "_stress_3",
"_ospan_0", "_ospan_1", "_ospan_2", "_ospan_3",
"_ospan_int_0", "_ospan_int_1", "_ospan_int_2", "_ospan_int_3",
"_corsirt_0", "_corsirt_1", "_corsirt_2", "_corsirt_3",
"_corsirt_int_0", "_corsirt_int_1", "_corsirt_int_2", "_corsirt_int_3",
"_car_0", "_car_1", "_car_2", "_car_3",
# "_corsi_0", "_corsi_1", "_corsi_2", "_corsi_3",
"_car_int_0", "_car_int_1", "_car_int_2", "_car_int_3"
# "_corsi_int_0", "_corsi_int_1", "_corsi_int_2", "_corsi_int_3"
)
# Store ind models in list
mon_mods <- mget(c(paste0(mod_type, mod_spec)
))
mod_spec <- c("_base",
"_stress_0", "_stress_1", "_stress_2",
"_ospan_0", "_ospan_1", "_ospan_2",
"_ospan_int_0", "_ospan_int_1", "_ospan_int_2",
"_corsirt_0", "_corsirt_1", "_corsirt_2",
"_corsirt_int_0", "_corsirt_int_1", "_corsirt_int_2",
"_car_0", "_car_1", "_car_2",
# "_corsi_0", "_corsi_1", "_corsi_2", "_corsi_3",
"_car_int_0", "_car_int_1", "_car_int_2"
# "_corsi_int_0", "_corsi_int_1", "_corsi_int_2", "_corsi_int_3"
)
# Store ind models in list
mon_mods <- mget(c(paste0(mod_type, mod_spec)
))
# Store ind models in list
mon_mods_equal <- mget(c(paste0(mod_type, mod_spec)
))
save(mon_mods_equal,
file = here("mods", "vision", "gca", "cont_speed_verb",
"mon_mods_equal.Rdata"))
# BRANCH #2
# add visuospatial WM effect to intercept, linear slope, quadratic, and cubic time terms
gca_mon_corsi_0 <- update(gca_mon_base,    . ~ . + corsi)
View(mon_vision)
corsi <- read_csv("./data/clean/corsi_z_scores.csv")
vision <- read_csv("./data/clean/vision_scores.csv")
corsi <- read_csv("./data/clean/corsi_z_scores.csv")
vision50 <- left_join(x = vision50, y = corsi, by = "participant", all.x=TRUE)
# source(here::here("scripts", "02_load_data.R"))
stress50 <- read_csv(here("data", "clean", "stress_50ms_final_onsetc3updated.csv"))
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = vision, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = corsi, by = "participant", all.x=TRUE)
vision50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 3, prefix = "ot")
mon_vision <- filter(vision50, l1 == 'es') %>% select(-DELE, -percent_l2_week,
-DELE_z, -use_z, -prof, -group)
mod_ot1 <-
lmer(eLog ~ 1 + ot1 +
(1 + stress_sum + ot1 | participant),
control = lmerControl(optimizer = 'bobyqa'),
data = mon_vision, weights = 1/wts, REML = F)
mod_ot2 <-
update(mod_ot1, . ~ . -(1 + stress_sum + ot1 | participant) +
ot2 + (1 + stress_sum + ot1 + ot2 | participant))
mod_ot4 <- update(mod_ot2, . ~ . + (1 | target))
mod_ot5 <- update(mod_ot4, . ~ . -(1 | target) + (1 + ot1 | target))
# Base model
gca_mon_base <- mod_ot5
# add stress effect to intercept, linear slope, quadratic, and cubic time terms
gca_mon_stress_0 <- update(gca_mon_base,    . ~ . + stress_sum)
# BRANCH #2
# add visuospatial WM effect to intercept, linear slope, quadratic, and cubic time terms
gca_mon_corsi_0 <- update(gca_mon_base,    . ~ . + corsi)
gca_mon_corsi_1 <- update(gca_mon_corsi_0, . ~ . + ot1:corsi)
gca_mon_corsi_2 <- update(gca_mon_corsi_1, . ~ . + ot2:corsi)
mon_corsi_anova <-
anova(gca_mon_base, gca_mon_corsi_0, gca_mon_corsi_1,
gca_mon_corsi_2)
# Load data
source(here::here("scripts", "00_load_libs.R"))
# source(here::here("scripts", "02_load_data.R"))
stress50 <- read_csv(here("data", "clean", "stress_50ms_final_onsetc3updated.csv"))
wm <- read_csv("./data/clean/wm_processing_speed.csv")
vision <- read_csv("./data/clean/vision_scores.csv") # pred car
corsi <- read_csv("./data/clean/corsi_z_scores.csv")
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = vision, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = corsi, by = "participant", all.x=TRUE)
vision50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 3, prefix = "ot")
mon_vision <- filter(vision50, l1 == 'es') %>% select(-DELE, -percent_l2_week,
-DELE_z, -use_z, -prof, -group)
View(mon_vision)
mod_ot1 <-
lmer(eLog ~ 1 + ot1 +
(1 + stress_sum + ot1 | participant),
control = lmerControl(optimizer = 'bobyqa'),
data = mon_vision, weights = 1/wts, REML = F)
mod_ot2 <-
update(mod_ot1, . ~ . -(1 + stress_sum + ot1 | participant) +
ot2 + (1 + stress_sum + ot1 + ot2 | participant))
mod_ot4 <- update(mod_ot2, . ~ . + (1 | target))
mod_ot5 <- update(mod_ot4, . ~ . -(1 | target) + (1 + ot1 | target))
# Base model
gca_mon_base <- mod_ot5
# BRANCH #2
# add visuospatial WM effect to intercept, linear slope, quadratic, and cubic time terms
gca_mon_corsi_0 <- update(gca_mon_base,    . ~ . + corsi)
gca_mon_corsi_1 <- update(gca_mon_corsi_0, . ~ . + ot1:corsi)
gca_mon_corsi_2 <- update(gca_mon_corsi_1, . ~ . + ot2:corsi)
anova(gca_mon_base, gca_mon_corsi_0, gca_mon_corsi_1,
gca_mon_corsi_2)
vision50 <- na.omit(vision50)
mon_vision <- filter(vision50, l1 == 'es') %>% select(-DELE, -percent_l2_week,
-DELE_z, -use_z, -prof, -group)
mod_ot1 <-
lmer(eLog ~ 1 + ot1 +
(1 + stress_sum + ot1 | participant),
control = lmerControl(optimizer = 'bobyqa'),
data = mon_vision, weights = 1/wts, REML = F)
mod_ot2 <-
update(mod_ot1, . ~ . -(1 + stress_sum + ot1 | participant) +
ot2 + (1 + stress_sum + ot1 + ot2 | participant))
mod_ot3 <-
update(mod_ot2, . ~ . -(1 + stress_sum + ot1 + ot2 | participant) +
ot3 + (1 + stress_sum + ot1 + ot2 + ot3 | participant))
anova(mod_ot1, mod_ot2, mod_ot3)
# Load data
source(here::here("scripts", "00_load_libs.R"))
# source(here::here("scripts", "02_load_data.R"))
stress50 <- read_csv(here("data", "clean", "stress_50ms_final_onsetc3updated.csv"))
wm <- read_csv("./data/clean/wm_processing_speed.csv")
vision <- read_csv("./data/clean/vision_scores.csv") # pred car
corsi <- read_csv("./data/clean/corsi_z_scores.csv")
vision50 <- left_join(x = stress50, y = wm, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = vision, by = "participant", all.x=TRUE)
vision50 <- left_join(x = vision50, y = corsi, by = "participant", all.x=TRUE)
vision50 <- na.omit(vision50)
vision50 <- vision50 %>%
filter(., l1 == 'es' & time_zero >= -4 & time_zero <= 4) %>%
mutate(., #l1 = fct_relevel(l1, "es", "en", "ma"),
stress_sum = if_else(cond == "1", -1, 1)) %>%           # 1 = present, 2 = preterit
poly_add_columns(., time_zero, degree = 3, prefix = "ot")
mon_vision <- filter(vision50, l1 == 'es') %>% select(-DELE, -percent_l2_week,
-DELE_z, -use_z, -prof, -group)
mod_ot1 <-
lmer(eLog ~ 1 + ot1 +
(1 + stress_sum + ot1 | participant),
control = lmerControl(optimizer = 'bobyqa'),
data = mon_vision, weights = 1/wts, REML = F)
mod_ot2 <-
update(mod_ot1, . ~ . -(1 + stress_sum + ot1 | participant) +
ot2 + (1 + stress_sum + ot1 + ot2 | participant))
mod_ot3 <-
update(mod_ot2, . ~ . -(1 + stress_sum + ot1 + ot2 | participant) +
ot3 + (1 + stress_sum + ot1 + ot2 + ot3 | participant))
anova(mod_ot1, mod_ot2, mod_ot3)
mod_ot4 <- update(mod_ot2, . ~ . + (1 | target))
mod_ot5 <- update(mod_ot4, . ~ . -(1 | target) + (1 + ot1 | target))
mod_ot6 <- update(mod_ot5, . ~ . -(1 + ot1 | target) +
+ (1 + ot1 + ot2 | target))
mod_ot7 <- update(mod_ot6, . ~ . -(1 + ot1 + ot2 | target) +
+ ot3 + (1 + ot1 + ot2 + ot3 | target))
anova(mod_ot2, mod_ot4, mod_ot5, mod_ot6, mod_ot7)
# Base model
gca_mon_base <- mod_ot5
# add stress effect to intercept, linear slope, quadratic, and cubic time terms
gca_mon_stress_0 <- update(gca_mon_base,    . ~ . + stress_sum)
gca_mon_stress_1 <- update(gca_mon_stress_0, . ~ . + ot1:stress_sum)
gca_mon_stress_2 <- update(gca_mon_stress_1, . ~ . + ot2:stress_sum)
mon_stress_anova <-
anova(gca_mon_base, gca_mon_stress_0, gca_mon_stress_1,
gca_mon_stress_2)
mon_stress_anova
# BRANCH #0
# add verbal proc time effect to intercept, linear slope, quadratic, and cubic time terms
gca_mon_ospan_0 <- update(gca_mon_base,    . ~ . + ospan_rt)
gca_mon_ospan_1 <- update(gca_mon_ospan_0, . ~ . + ot1:ospan_rt)
gca_mon_ospan_2 <- update(gca_mon_ospan_1, . ~ . + ot2:ospan_rt)
mon_ospan_anova <-
anova(gca_mon_base, gca_mon_ospan_0, gca_mon_ospan_1,
gca_mon_ospan_2)
mon_ospan_anova
# add 2-way int to intercept, linear slope, quadratic, and cubic time terms
gca_mon_ospan_int_0 <- update(gca_mon_base, . ~ . + stress_sum:ospan_rt)
gca_mon_ospan_int_1 <- update(gca_mon_ospan_int_0,   . ~ . + ot1:stress_sum:ospan_rt)
gca_mon_ospan_int_2 <- update(gca_mon_ospan_int_1,   . ~ . + ot2:stress_sum:ospan_rt)
mon_ospan_int_anova <-
anova(gca_mon_base, gca_mon_ospan_int_0, gca_mon_ospan_int_1,
gca_mon_ospan_int_2)
mon_ospan_int_anova
# BRANCH #1
# add visuospatial anticipation effect to intercept, linear slope, quadratic, and cubic time terms
gca_mon_car_0 <- update(gca_mon_base,    . ~ . + car_dev)
gca_mon_car_1 <- update(gca_mon_car_0, . ~ . + ot1:car_dev)
gca_mon_car_2 <- update(gca_mon_car_1, . ~ . + ot2:car_dev)
mon_car_anova <-
anova(gca_mon_base, gca_mon_car_0, gca_mon_car_1,
gca_mon_car_2)
mon_car_anova
# add 2-way int to intercept, linear slope, quadratic, and cubic time terms
gca_mon_car_int_0 <- update(gca_mon_base, . ~ . + stress_sum:car_dev)
gca_mon_car_int_1 <- update(gca_mon_car_int_0,   . ~ . + ot1:stress_sum:car_dev)
gca_mon_car_int_2 <- update(gca_mon_car_int_1,   . ~ . + ot2:stress_sum:car_dev)
mon_car_int_anova <-
anova(gca_mon_car_2, gca_mon_car_int_0, gca_mon_car_int_1,
gca_mon_car_int_2)
mon_car_int_anova <-
anova(gca_mon_base, gca_mon_car_int_0, gca_mon_car_int_1,
gca_mon_car_int_2)
mon_car_int_anova
# BRANCH #2
# add visuospatial WM effect to intercept, linear slope, quadratic, and cubic time terms
gca_mon_corsi_0 <- update(gca_mon_base,    . ~ . + corsi)
gca_mon_corsi_1 <- update(gca_mon_corsi_0, . ~ . + ot1:corsi)
gca_mon_corsi_2 <- update(gca_mon_corsi_1, . ~ . + ot2:corsi)
mon_corsi_anova <-
anova(gca_mon_base, gca_mon_corsi_0, gca_mon_corsi_1,
gca_mon_corsi_2)
mon_corsi_anova
# add 2-way int to intercept, linear slope, quadratic, and cubic time terms
gca_mon_corsi_int_0 <- update(gca_mon_corsi_2, . ~ . + stress_sum:corsi)
gca_mon_corsi_int_1 <- update(gca_mon_corsi_int_0,   . ~ . + ot1:stress_sum:corsi)
gca_mon_corsi_int_2 <- update(gca_mon_corsi_int_1,   . ~ . + ot2:stress_sum:corsi)
mon_corsi_int_anova <-
anova(gca_mon_corsi_2, gca_mon_corsi_int_0, gca_mon_corsi_int_1,
gca_mon_corsi_int_2)
mon_corsi_int_anova
# BRANCH #3
# add visuospatial proc speed effect to intercept, linear slope, quadratic, and cubic time terms
gca_mon_corsirt_0 <- update(gca_mon_base,    . ~ . + corsi_rt)
gca_mon_corsirt_1 <- update(gca_mon_corsirt_0, . ~ . + ot1:corsi_rt)
gca_mon_corsirt_2 <- update(gca_mon_corsirt_1, . ~ . + ot2:corsi_rt)
mon_corsirt_anova <-
anova(gca_mon_base, gca_mon_corsirt_0, gca_mon_corsirt_1,
gca_mon_corsirt_2)
mon_corsirt_anova
# add 2-way int to intercept, linear slope, quadratic, and cubic time terms
gca_mon_corsirt_int_0 <- update(gca_mon_base, . ~ . + stress_sum:corsi_rt)
gca_mon_corsirt_int_1 <- update(gca_mon_corsirt_int_0,   . ~ . + ot1:stress_sum:corsi_rt)
gca_mon_corsirt_int_2 <- update(gca_mon_corsirt_int_1,   . ~ . + ot2:stress_sum:corsi_rt)
mon_corsirt_int_anova <-
anova(gca_mon_base, gca_mon_corsirt_int_0, gca_mon_corsirt_int_1,
gca_mon_corsirt_int_2)
mon_corsirt_int_anova
View(mon_vision)
wm_score <- read_csv("./data/clean/ospan_set_z_scores.csv")
vision50 <- left_join(x = vision50, y = wm_score, by = "participant", all.x=TRUE)
vision50 <- na.omit(vision50)
mon_vision <- filter(vision50, l1 == 'es') %>% select(-DELE, -percent_l2_week,
-DELE_z, -use_z, -prof, -group)
# BRANCH #4
# add verbal wm score effect to intercept, linear slope, quadratic, and cubic time terms
gca_mon_ospanscore_0 <- update(gca_mon_base,    . ~ . + ospan)
gca_mon_ospanscore_1 <- update(gca_mon_ospanscore_0, . ~ . + ot1:ospan)
gca_mon_ospanscore_2 <- update(gca_mon_ospanscore_1, . ~ . + ot2:ospan)
mon_corsirt_anova <-
anova(gca_mon_base, gca_mon_ospanscore_0, gca_mon_ospanscore_1,
gca_mon_ospanscore_2)
mon_ospanscore_anova <-
anova(gca_mon_base, gca_mon_ospanscore_0, gca_mon_ospanscore_1,
gca_mon_ospanscore_2)
mon_ospanscore_anova
mon_corsirt_anova <-
anova(gca_mon_base, gca_mon_corsirt_0, gca_mon_corsirt_1,
gca_mon_corsirt_2)
# add 2-way int to intercept, linear slope, quadratic, and cubic time terms
gca_mon_ospanscore_int_0 <- update(gca_mon_base, . ~ . + stress_sum:ospan)
gca_mon_ospanscore_int_1 <- update(gca_mon_ospanscore_int_0,   . ~ . + ot1:stress_sum:ospan)
gca_mon_ospanscore_int_2 <- update(gca_mon_ospanscore_int_1,   . ~ . + ot2:stress_sum:ospan)
mon_ospanscore_int_anova <-
anova(gca_mon_base, gca_mon_ospanscore_int_0, gca_mon_ospanscore_int_1,
gca_mon_ospanscore_int_2)
mon_ospanscore_int_anova
mod_type <- "gca_mon"
mod_spec <- c("_base",
"_stress_0", "_stress_1", "_stress_2",
"_ospan_0", "_ospan_1", "_ospan_2",
"_ospan_int_0", "_ospan_int_1", "_ospan_int_2",
"_corsirt_0", "_corsirt_1", "_corsirt_2",
"_corsirt_int_0", "_corsirt_int_1", "_corsirt_int_2",
"_car_0", "_car_1", "_car_2",
"_corsi_0", "_corsi_1", "_corsi_2", "_corsi_3",
"_car_int_0", "_car_int_1", "_car_int_2",
"_corsi_int_0", "_corsi_int_1", "_corsi_int_2", "_corsi_int_3",
"_ospanscore_0", "_ospanscore_1", "_ospanscore_2",
"_ospanscore_int_0", "_ospanscore_int_1", "_ospanscore_int_2"
)
# Store ind models in list
mon_mods_allset <- mget(c(paste0(mod_type, mod_spec)
))
mod_spec <- c("_base",
"_stress_0", "_stress_1", "_stress_2",
"_ospan_0", "_ospan_1", "_ospan_2",
"_ospan_int_0", "_ospan_int_1", "_ospan_int_2",
"_corsirt_0", "_corsirt_1", "_corsirt_2",
"_corsirt_int_0", "_corsirt_int_1", "_corsirt_int_2",
"_car_0", "_car_1", "_car_2",
"_corsi_0", "_corsi_1", "_corsi_2",
"_car_int_0", "_car_int_1", "_car_int_2",
"_corsi_int_0", "_corsi_int_1", "_corsi_int_2",
"_ospanscore_0", "_ospanscore_1", "_ospanscore_2",
"_ospanscore_int_0", "_ospanscore_int_1", "_ospanscore_int_2"
)
# Store ind models in list
mon_mods_allset <- mget(c(paste0(mod_type, mod_spec)
))
save(mon_mods_allset,
file = here("mods", "vision", "gca", "cont_speed_verb",
"mon_mods_equal.Rdata"))
save(mon_mods_allset,
file = here("mods", "vision", "gca", "cont_speed_verb",
"mon_mods_allset.Rdata"))
library("papaja")
library("officer")
library("flextable")
library("readr")
library("here")
stress50 <- read_csv(here::here("data", "clean", "stress_50ms_final_onsetc3updated.csv"))
# Get path to saved models
gca_mods_path  <- here::here("mods", "stress", "gca", "LL_changes")
# Load models as list and store full mod to global env
load(paste0(gca_mods_path, "/gca_mon_mods_4equal.Rdata"))
load(paste0(gca_mods_path, "/gca_l2_dele_4equal.Rdata"))
load(paste0(gca_mods_path, "/model_preds_l1ot2.Rdata")) # L2 prof and use together
knitr::include_graphics(
here("figs", "stress", "gca", "LL_changes", "timecourse.png")
)
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_mon_mods_4equal$gca_mod_mon_final %>%
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
library("papaja")
library("officer")
library("flextable")
library("readr")
library("here")
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_mon_mods_4equal$gca_mod_mon_final %>%
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
?%>%
library("magrittr")
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_mon_mods_4equal$gca_mod_mon_final %>%
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
source(here::here("scripts", "01_helpers.R"))
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_mon_mods_4equal$gca_mod_mon_final %>%
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:2, 0))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects$Parameter %<>% paste(., var_labels)
pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
border_1 <- fp_border(width = 1.5)
border_2 <- fp_border(width = 0.75)
model_preds_4equal$target_onset_preds_mon %>%
# mutate(stress = if_else(stress == 1, "Preterit", "Present")) %>%
# arrange(stress) %>%
# group_by(stress) %>%
distinct() %>%
#ungroup() %>%
# mutate(
#        stress = blank_same_as_last(as.character(stress))) %>%
select(Probability = prob,
`Lower bound` = prob_lb, `Upper bound` = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3), width = c(1.3, 1.3)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
load(paste0(gca_mods_path, "/model_preds_4equal.Rdata"))
model_preds_4equal$target_onset_preds_mon %>%
# mutate(stress = if_else(stress == 1, "Preterit", "Present")) %>%
# arrange(stress) %>%
# group_by(stress) %>%
distinct() %>%
#ungroup() %>%
# mutate(
#        stress = blank_same_as_last(as.character(stress))) %>%
select(Probability = prob,
`Lower bound` = prob_lb, `Upper bound` = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3), width = c(1.3, 1.3)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
knitr::include_graphics(
here("figs", "stress", "gca", 'LL_changes', "mon_plot_4equal.png")
)
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_l2_dele_4equal$gca_l2_dele_final %>%
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:2, 0), paste0(0, 1:3),
paste0(1, 3))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects$Parameter %<>% paste(., var_labels)
pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
model_preds_4equal$target_onset_preds_dele %>%
mutate(`Stress pattern` = if_else(`Stress pattern` == 1, "Oxytone (Preterite)", "Paroxytone (Present)"),
`Stress pattern` = fct_relevel(`Stress pattern`, 'Paroxytone (Present)'),
`L1 experience` = if_else(`L1 experience` == -1, "English", "Mandarin"),
`L1 experience` = fct_relevel(`L1 experience`, "English", "Mandarin")) %>%
arrange(`L1 experience`, `Stress pattern`) %>%
# group_by(l1, stress) %>%
# distinct() %>%
mutate(`L1 experience` = blank_same_as_last(as.character(`L1 experience`)),
`L2 proficiency` = blank_same_as_last(as.character(`L2 proficiency`)),
`Stress pattern` = blank_same_as_last(as.character(`Stress pattern`))
) %>%
select(`L1 experience`, `Stress pattern`, `L2 proficiency`,
Probability = prob, #`Lexical stress` = stress,
`Lower bound` = prob_lb, `Upper bound` = prob_ub) %>%
flextable() %>%
width(., j = c(1:3, 5:6), width = c(1.2, 1.1, 1.2, 1.2, 1.2)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
colformat_num(j = c(4:6), digits = 2) %>%
align(., j = 3, align = "right", part = "body") %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
knitr::include_graphics(
here("figs", "stress", "gca", 'LL_changes', "dele_plot_4equal.png")
)
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_l2_use_4equal$gca_l2_use_final %>%
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
load(paste0(gca_mods_path, "/gca_l2_use_4equal.Rdata"))
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_l2_use_4equal$gca_l2_use_final %>%
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:3, 0), paste0(0, 1:2),
paste0(1, 2), paste0(0, 3:4),
paste0(1:2, 3), paste0(1, 4))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects$Parameter %<>% paste(., var_labels)
pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
knitr::include_graphics(
here("figs", "stress", "gca", 'LL_changes', "use_plot_4equal.png"))
plogis(-1)
plogis(1)
library("papaja")
library("officer")
library("flextable")
library("readr")
library("here")
library("magrittr")
# Get path to saved models
gca_mods_path  <- here::here("mods", "stress", "gca", "LL_changes")
# Load models as list and store full mod to global env
load(paste0(gca_mods_path, "/gca_mon_mods_4equal.Rdata"))
load(paste0(gca_mods_path, "/gca_l2_dele_4equal.Rdata"))
load(paste0(gca_mods_path, "/gca_l2_use_4equal.Rdata"))
load(paste0(gca_mods_path, "/gca_l2_l1ot2.Rdata")) # L2 prof and use together
summary(gca_mon_mods_4equal$gca_mod_mon_final)
summary(gca_l2_dele_4equal$gca_l2_dele_final)
summary(gca_l2_use_4equal$gca_l2_use_final)
summary(gca_l2$gca_l2_nt_2)
include_graphics("./figs/stress/gca/LL_changes/mon_plot_4equal.png", dpi = 108)
