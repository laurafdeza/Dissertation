"_stress_0", "_stress_1", "_stress_2",
"_corsirt_0", "_corsirt_1", "_corsirt_2",
"_corsirt_int_0", "_corsirt_int_1", "_corsirt_int_2",
"_ospan_0", "_ospan_1", "_ospan_2",
"_ospan_i_0", "_ospan_i_1", "_ospan_i_2",
"_ospan_in_0", "_ospan_in_1", "_ospan_in_2",
"_ospan_int_0", "_ospan_int_1", "_ospan_int_2",
"_car_0", "_car_1", "_car_2",
"_car_i_0", "_car_i_1", "_car_i_2",
"_car_in_0", "_car_in_1", "_car_in_2",
"_car_int_0", "_car_int_1", "_car_int_2"
)
# Store ind models in list
mon_mods_psequal <- mget(c(paste0(mod_type, mod_spec)
))
save(mon_mods_psequal,
file = here("mods", "vision", "gca", "cont_speed_verb",
"mon_mods_psequal.Rdata"))
# Create design dataframe for predictions
mon_newdata <- mon_vision %>%
dplyr::select(time_zero, ot1:ot3, stress_sum) %>%
distinct %>%
expand_grid(., tibble(corsi_rt = c(-1, 0, 1))) %>%
expand_grid(., tibble(ospan_rt = c(-1, 0, 1)))
# Get model predictions and SE
fits_mon_ospan <- predictSE(gca_mon_ospan_i_2, mon_newdata) %>%
as_tibble %>%
bind_cols(mon_newdata) %>%
rename(se = se.fit) %>%
mutate(ymin = fit - se, ymax = fit + se)
# Filter preds at target syllable offset
preds_mon_ospan <- filter(fits_mon_ospan, time_zero == 4) %>%
select(stress = stress_sum, ospan_rt, corsi_rt,
elog = fit, elog_lb = ymin, elog_ub = ymax) %>%
mutate(prob = plogis(elog),
prob_lb = plogis(elog_lb),
prob_ub = plogis(elog_ub))
# Save models predictions
model_preds_psequal <- mget(c('fits_mon_ospan',
"preds_mon_ospan"
))
save(model_preds_psequal,
file = here("mods", "vision", "gca", "cont_speed_verb",
"model_preds_psequal.Rdata"))
plot_data <- mon_vision
plot_data$cond <- as.factor(as.character(plot_data$cond))
condition_names <- c(
`1` = 'Paroxytone\n(CANta)',
`2` = 'Oxytone\n(canTÃ“)'
)
plot_data %>%
#na.omit(.) %>%
filter(., time_zero >= -6, time_zero <= 6) %>%
ggplot(., aes(x = time_zero, y = target_prop)) +
facet_grid(cond ~ ., labeller = as_labeller(condition_names)) +
geom_hline(yintercept = 0.5, color = 'grey40', lty = 3) +
geom_vline(xintercept = 0, color = 'grey40', lty = 3) +
geom_vline(xintercept = 4, color = 'grey40', lty = 3) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange', size = 0.5,
stroke = 0.5, pch = 21) +
scale_x_continuous(breaks = c(-10, 0, 10),
labels = c("-500", "0", "500")) +
labs(y = 'Proportion of target fixations',
x = 'Time relative to target syllable offset (ms)',
caption = "Mean +/- 95% CI") +
annotate("text", x = 3.8, y = 0.2, label = '200ms',
angle = 90, size = 3, hjust = 0, family = 'Times') +
theme_grey(base_size = 12, base_family = "Times") +
theme(legend.position = 'bottom')
plot_data %>%
#na.omit(.) %>%
filter(., time_zero >= -0, time_zero <= 8) %>%
ggplot(., aes(x = time_zero, y = target_prop)) +
facet_grid(cond ~ ., labeller = as_labeller(condition_names)) +
geom_hline(yintercept = 0.5, color = 'grey40', lty = 3) +
geom_vline(xintercept = 0, color = 'grey40', lty = 3) +
geom_vline(xintercept = 4, color = 'grey40', lty = 3) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange', size = 0.5,
stroke = 0.5, pch = 21) +
scale_x_continuous(breaks = c(-10, 0, 10),
labels = c("-500", "0", "500")) +
labs(y = 'Proportion of target fixations',
x = 'Time relative to target syllable offset (ms)',
caption = "Mean +/- 95% CI") +
annotate("text", x = 3.8, y = 0.2, label = '200ms',
angle = 90, size = 3, hjust = 0, family = 'Times') +
theme_grey(base_size = 12, base_family = "Times") +
theme(legend.position = 'bottom')
stress_p1 <- plot_data %>%
#na.omit(.) %>%
filter(., time_zero >= -0, time_zero <= 8) %>%
ggplot(., aes(x = time_zero, y = target_prop)) +
facet_grid(cond ~ ., labeller = as_labeller(condition_names)) +
geom_hline(yintercept = 0.5, color = 'grey40', lty = 3) +
geom_vline(xintercept = 0, color = 'grey40', lty = 3) +
geom_vline(xintercept = 4, color = 'grey40', lty = 3) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange', size = 0.5,
stroke = 0.5, pch = 21) +
scale_x_continuous(breaks = c(-10, 0, 10),
labels = c("-500", "0", "500")) +
labs(y = 'Proportion of target fixations',
x = 'Time relative to target syllable offset (ms)',
caption = "Mean +/- 95% CI") +
annotate("text", x = 3.8, y = 0.2, label = '200ms',
angle = 90, size = 3, hjust = 0, family = 'Times') +
theme_grey(base_size = 12, base_family = "Times") +
theme(legend.position = 'bottom')
# Set path for saving figures
figs_path <- here("figs", "vision", "gca", 'cont_speed_verb')
ggsave('timecourse_mon_psequal.png',
plot = stress_p1, dpi = 600, device = "png",
path = figs_path,
height = 3.5, width = 4.5, units = 'in')
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`)) +
facet_grid(. ~ Stress) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed') +
ggtitle('Stress pattern') +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`, color = ospan_rt)) +
facet_grid(. ~ Stress) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed')
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
color = ospan_rt, lty = `Visuospatial processing speed`)) +
facet_grid(. ~ Stress)
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
color = ospan_rt, lty = `Visuospatial processing speed`)) +
facet_grid(. ~ Stress) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35)
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
color = ospan_rt, lty = `Visuospatial processing speed`)) +
facet_grid(. ~ Stress) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F)
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`)) +
facet_grid(ospan_rt ~ Stress) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35)
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`)) +
facet_grid(ospan_rt ~ Stress) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed') +
ggtitle('Stress pattern') +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
mon_ospanrt <- model_predsalleq400$fits_mon_ospanrt %>%
mutate(`Verbal processing speed` = as.factor(ospan_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Verbal processing speed`)) +
facet_grid(. ~ Stress) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Verbal processing speed') +
ggtitle('Stress pattern') +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`, color = Stress)) +
facet_grid(ospan_rt ~ .) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed') +
ggtitle('Stress pattern') +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`, color = Stress)) +
facet_grid(ospan_rt ~ .) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
# geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed') +
ggtitle('Stress pattern') +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`, color = Stress)) +
facet_grid(ospan_rt ~ .) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
# stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
#                             alpha = 0.5) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed') +
ggtitle('Stress pattern') +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`, color = Stress)) +
facet_grid(ospan_rt ~ .) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
# stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
#                             alpha = 0.5) +
# geom_line(size = 0.35) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed') +
ggtitle('Stress pattern') +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`, color = Stress)) +
facet_grid(ospan_rt ~ .) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
# stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
#                             alpha = 0.5) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed') +
ggtitle('Stress pattern') +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`, color = Stress)) +
facet_grid(ospan_rt ~ .) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, show.legend = F) +
# stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
#                             alpha = 0.5) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed') +
ggtitle('Stress pattern') +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`, color = Stress)) +
facet_grid(ospan_rt ~ .) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.5, show.legend = F) +
# stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
#                             alpha = 0.5) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed') +
ggtitle('Stress pattern') +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`, color = Stress)) +
facet_grid(ospan_rt ~ .) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.1, show.legend = F) +
# stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
#                             alpha = 0.5) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed') +
ggtitle('Stress pattern') +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`, color = Stress)) +
facet_grid(ospan_rt ~ .) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed') +
ggtitle('Stress pattern') +
geom_ribbon(alpha = 0.1, show.legend = F) +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`, color = Stress)) +
facet_grid(ospan_rt ~ .) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.1, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted'), size = 1) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed') +
ggtitle('Stress pattern') +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
# Car model
mon_gca_psequal <- model_preds_psequal$fits_mon_ospan %>%
mutate(`Visuospatial processing speed` = as.factor(corsi_rt),
Stress = if_else(stress_sum == -1, "Paroxytone/present", "Oxytone/preterite"),
Stress = fct_relevel(Stress, 'Paroxytone/present')) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
lty = `Visuospatial processing speed`, color = Stress)) +
facet_grid(ospan_rt ~ .) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.1, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_linetype_manual(values=c("solid", "dashed", 'dotted')) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target",
lty = 'Visuospatial processing speed') +
ggtitle('Stress pattern') +
theme_grey(base_size = 10, base_family = "Times") +
theme(
legend.position = 'bottom',
plot.title = element_text(size = 9, hjust = 0.5),
plot.margin = margin(t = 5, l = 5, r = 24))
ggsave(paste0(figs_path, "/mon_gca_psequal.png"), mon_gca_psequal, width = 180,
height = 120, units = "mm", dpi = 600)
